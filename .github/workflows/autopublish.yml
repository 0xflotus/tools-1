name: Auto-publish
on:
  schedule:
    - cron: '0 0 * * *'
  push:
    branches:
      - main
    paths:
      - 'package.json'

jobs:
  check:
    name: Check if there was a version update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set default release tag
        run: |
          echo "tag=latest" >> $GITHUB_ENV

      - name: Check nightly status
        id: nightly
        if: github.event_name == 'schedule'
        run: |
          echo "tag=nightly" >> $GITHUB_ENV
          echo "nightly=true" >> $GITHUB_ENV

      - name: Check version changes
        uses: EndBug/version-check@v1
        id: version
        with:
          diff-search: true

      - run: |
          echo "version=${{ steps.version.outputs.version }}" >> $GITHUB_ENV

      - name: Check prerelease status
        id: prerelease
        if: steps.version.outputs.type == 'prerelease' || steps.version.outputs.type == 'prepatch' || steps.version.outputs.type == 'premajor' || steps.version.outputs.type == 'preminor'
        run: |
          echo "prerelease=true" >> $GITHUB_ENV

      - name: Check version status
        if: steps.version.outputs.changed == 'true'
        run: |
          echo "version_changed=true" >> $GITHUB_ENV
          'echo "Version change found! New version: ${{ steps.version.outputs.version }} (${{ steps.version.outputs.version_type }})"'

  build:
    name: Build Release
    needs: check
    if: env.version_changed == 'true' || env.nightly == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'

      - name: Set tag if prerelease
        if: needs.check.outputs.prerelease == 'true'
        run: |
          echo "tag=prerelease" >> $GITHUB_ENV

      - name: Update version if nightly
        if: needs.check.outputs.nightly == 'true'
        run: |
          ./rome run scripts/update-nightly-version
          NEW_VERSION=$(./rome --version)
          echo "version=$NEW_VERSION" >> $GITHUB_ENV
          echo "tag=nightly" >> $GITHUB_ENV

      - name: Build package
        run: ./rome run scripts/build-release dist
      
      - name: Build tarball
        run: tar -C dist -cvzf dist.tar.gz .
      
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        if-no-files-found: error
        with:
          name: dist.tar.gz
          path: dist.tar.gz
          retention-days: 5

  publish:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v1
        with:
          node-version: '14.16.0'
          registry-url: 'https://registry.npmjs.org'

      - run: |
          echo "Publishing ${{ env.version }} ${{ env.tag }}"

      - uses: actions/download-artifact@v2
        with:
          name: dist.tar.gz
