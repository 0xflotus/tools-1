Program {
  comments: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 10
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: 'input.js'
      message: 'Expected a semicolon or a line terminator'
      mtime: undefined
      sourceType: 'script'
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 5
        index: 5
        line: 1
      }
      start: Object {
        column: 6
        index: 6
        line: 1
      }
    }
  ]
  body: Array [
    BlockStatement {
      directives: Array []
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 9
          index: 9
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      body: Array [
        ExpressionStatement {
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 5
              index: 5
              line: 1
            }
            start: Object {
              column: 2
              index: 2
              line: 1
            }
          }
          expression: ReferenceIdentifier {
            name: 'let'
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 5
                index: 5
                line: 1
              }
              start: Object {
                column: 2
                index: 2
                line: 1
              }
            }
          }
        }
        ExpressionStatement {
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 7
              index: 7
              line: 1
            }
            start: Object {
              column: 6
              index: 6
              line: 1
            }
          }
          expression: ReferenceIdentifier {
            name: 'x'
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 7
                index: 7
                line: 1
              }
              start: Object {
                column: 6
                index: 6
                line: 1
              }
            }
          }
        }
      ]
    }
  ]
}