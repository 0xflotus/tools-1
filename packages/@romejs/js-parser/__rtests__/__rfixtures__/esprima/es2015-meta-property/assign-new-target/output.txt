Program {
  comments: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 41
      line: 4
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: 'input.js'
      message: 'Expected a semicolon or a line terminator'
      mtime: undefined
      sourceType: 'script'
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 7
        index: 22
        line: 2
      }
      start: Object {
        column: 8
        index: 23
        line: 2
      }
    }
  ]
  body: Array [
    FunctionDeclaration {
      id: BindingIdentifier {
        name: 'f'
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 10
            index: 10
            line: 1
          }
          start: Object {
            column: 9
            index: 9
            line: 1
          }
        }
      }
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 1
          index: 40
          line: 3
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      head: FunctionHead {
        async: false
        generator: false
        hasHoistedVars: false
        params: Array []
        predicate: undefined
        rest: undefined
        returnType: undefined
        thisType: undefined
        typeParameters: undefined
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 13
            index: 13
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
      }
      body: BlockStatement {
        directives: Array []
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 1
            index: 40
            line: 3
          }
          start: Object {
            column: 13
            index: 13
            line: 1
          }
        }
        body: Array [
          ExpressionStatement {
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 7
                index: 22
                line: 2
              }
              start: Object {
                column: 4
                index: 19
                line: 2
              }
            }
            expression: ReferenceIdentifier {
              name: 'let'
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 7
                  index: 22
                  line: 2
                }
                start: Object {
                  column: 4
                  index: 19
                  line: 2
                }
              }
            }
          }
          ExpressionStatement {
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 23
                index: 38
                line: 2
              }
              start: Object {
                column: 8
                index: 23
                line: 2
              }
            }
            expression: AssignmentExpression {
              operator: '='
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 22
                  index: 37
                  line: 2
                }
                start: Object {
                  column: 8
                  index: 23
                  line: 2
                }
              }
              left: AssignmentIdentifier {
                name: 'x'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 9
                    index: 24
                    line: 2
                  }
                  start: Object {
                    column: 8
                    index: 23
                    line: 2
                  }
                }
              }
              right: MetaProperty {
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 22
                    index: 37
                    line: 2
                  }
                  start: Object {
                    column: 12
                    index: 27
                    line: 2
                  }
                }
                meta: Identifier {
                  name: 'new'
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 15
                      index: 30
                      line: 2
                    }
                    start: Object {
                      column: 12
                      index: 27
                      line: 2
                    }
                  }
                }
                property: Identifier {
                  name: 'target'
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 22
                      index: 37
                      line: 2
                    }
                    start: Object {
                      column: 16
                      index: 31
                      line: 2
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  ]
}