Program {
  comments: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 21
      line: 2
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: 'input.js'
      message: 'Expected a semicolon or a line terminator'
      mtime: undefined
      sourceType: 'script'
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 3
        index: 3
        line: 1
      }
      start: Object {
        column: 4
        index: 4
        line: 1
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 3
          index: 3
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      expression: ReferenceIdentifier {
        name: 'let'
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 3
            index: 3
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
      }
    }
    BlockStatement {
      directives: Array []
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 20
          index: 20
          line: 1
        }
        start: Object {
          column: 4
          index: 4
          line: 1
        }
      }
      body: Array [
        ExpressionStatement {
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 20
              index: 20
              line: 1
            }
            start: Object {
              column: 6
              index: 6
              line: 1
            }
          }
          expression: SequenceExpression {
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 19
                index: 19
                line: 1
              }
              start: Object {
                column: 6
                index: 6
                line: 1
              }
            }
            expressions: Array [
              ReferenceIdentifier {
                name: 'x'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 7
                    index: 7
                    line: 1
                  }
                  start: Object {
                    column: 6
                    index: 6
                    line: 1
                  }
                }
              }
              ReferenceIdentifier {
                name: 'y'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 10
                    index: 10
                    line: 1
                  }
                  start: Object {
                    column: 9
                    index: 9
                    line: 1
                  }
                }
              }
              AssignmentExpression {
                operator: '='
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 19
                    index: 19
                    line: 1
                  }
                  start: Object {
                    column: 12
                    index: 12
                    line: 1
                  }
                }
                left: AssignmentIdentifier {
                  name: 'INVALID_PLACEHOLDER'
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 13
                      index: 13
                      line: 1
                    }
                    start: Object {
                      column: 12
                      index: 12
                      line: 1
                    }
                  }
                }
                right: ReferenceIdentifier {
                  name: 'obj'
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 19
                      index: 19
                      line: 1
                    }
                    start: Object {
                      column: 16
                      index: 16
                      line: 1
                    }
                  }
                }
              }
            ]
          }
        }
      ]
    }
  ]
}