Program {
  comments: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 49
      line: 4
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: 'input.js'
      message: 'Can\'t have an await on a regular for loop'
      mtime: undefined
      sourceType: 'script'
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 11
        index: 32
        line: 2
      }
      start: Object {
        column: 11
        index: 32
        line: 2
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 1
          index: 48
          line: 3
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      expression: FunctionExpression {
        id: BindingIdentifier {
          name: 'f'
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 16
              index: 16
              line: 1
            }
            start: Object {
              column: 15
              index: 15
              line: 1
            }
          }
        }
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 1
            index: 48
            line: 3
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
        head: FunctionHead {
          async: true
          generator: false
          hasHoistedVars: false
          params: Array []
          predicate: undefined
          rest: undefined
          returnType: undefined
          thisType: undefined
          typeParameters: undefined
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 19
              index: 19
              line: 1
            }
            start: Object {
              column: 0
              index: 0
              line: 1
            }
          }
        }
        body: BlockStatement {
          directives: Array []
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 1
              index: 48
              line: 3
            }
            start: Object {
              column: 19
              index: 19
              line: 1
            }
          }
          body: Array [
            ForStatement {
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 23
                  index: 44
                  line: 2
                }
                start: Object {
                  column: 2
                  index: 23
                  line: 2
                }
              }
              init: ReferenceIdentifier {
                name: 'let'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 16
                    index: 37
                    line: 2
                  }
                  start: Object {
                    column: 13
                    index: 34
                    line: 2
                  }
                }
              }
              test: ReferenceIdentifier {
                name: 'x'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 18
                    index: 39
                    line: 2
                  }
                  start: Object {
                    column: 17
                    index: 38
                    line: 2
                  }
                }
              }
              update: ReferenceIdentifier {
                name: 'of'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 21
                    index: 42
                    line: 2
                  }
                  start: Object {
                    column: 19
                    index: 40
                    line: 2
                  }
                }
              }
              body: ExpressionStatement {
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 23
                    index: 44
                    line: 2
                  }
                  start: Object {
                    column: 22
                    index: 43
                    line: 2
                  }
                }
                expression: ReferenceIdentifier {
                  name: 'y'
                  loc: Object {
                    filename: 'input.js'
                    end: Object {
                      column: 23
                      index: 44
                      line: 2
                    }
                    start: Object {
                      column: 22
                      index: 43
                      line: 2
                    }
                  }
                }
              }
            }
            ExpressionStatement {
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 25
                  index: 46
                  line: 2
                }
                start: Object {
                  column: 23
                  index: 44
                  line: 2
                }
              }
              expression: ReferenceIdentifier {
                name: 'INVALID_PLACEHOLDER'
                loc: Object {
                  filename: 'input.js'
                  end: Object {
                    column: 24
                    index: 45
                    line: 2
                  }
                  start: Object {
                    column: 23
                    index: 44
                    line: 2
                  }
                }
              }
            }
          ]
        }
      }
    }
  ]
}