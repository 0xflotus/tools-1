Program {
  comments: Array []
  directives: Array []
  filename: 'input.js'
  hasHoistedVars: false
  interpreter: undefined
  mtime: undefined
  sourceType: 'script'
  syntax: Array []
  loc: Object {
    filename: 'input.js'
    end: Object {
      column: 0
      index: 26
      line: 3
    }
    start: Object {
      column: 0
      index: 0
      line: 1
    }
  }
  diagnostics: Array [
    Object {
      advice: undefined
      category: 'parse/js'
      filename: 'input.js'
      message: 'Unknown start to an statement expression'
      mtime: undefined
      sourceType: 'script'
      origins: Array [Object {category: 'js-parser'}]
      end: Object {
        column: 9
        index: 13
        line: 2
      }
      start: Object {
        column: 10
        index: 14
        line: 2
      }
    }
  ]
  body: Array [
    ExpressionStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 3
          index: 3
          line: 1
        }
        start: Object {
          column: 0
          index: 0
          line: 1
        }
      }
      expression: ReferenceIdentifier {
        name: 'let'
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 3
            index: 3
            line: 1
          }
          start: Object {
            column: 0
            index: 0
            line: 1
          }
        }
      }
    }
    BlockStatement {
      directives: Array []
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 9
          index: 13
          line: 2
        }
        start: Object {
          column: 4
          index: 8
          line: 2
        }
      }
      body: Array [
        ExpressionStatement {
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 7
              index: 11
              line: 2
            }
            start: Object {
              column: 6
              index: 10
              line: 2
            }
          }
          expression: ReferenceIdentifier {
            name: 'a'
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 7
                index: 11
                line: 2
              }
              start: Object {
                column: 6
                index: 10
                line: 2
              }
            }
          }
        }
      ]
    }
    ExpressionStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 11
          index: 15
          line: 2
        }
        start: Object {
          column: 10
          index: 14
          line: 2
        }
      }
      expression: ReferenceIdentifier {
        name: 'INVALID_PLACEHOLDER'
        loc: Object {
          filename: 'input.js'
          end: Object {
            column: 11
            index: 15
            line: 2
          }
          start: Object {
            column: 10
            index: 14
            line: 2
          }
        }
      }
    }
    BlockStatement {
      directives: Array []
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 20
          index: 24
          line: 2
        }
        start: Object {
          column: 12
          index: 16
          line: 2
        }
      }
      body: Array [
        LabeledStatement {
          loc: Object {
            filename: 'input.js'
            end: Object {
              column: 18
              index: 22
              line: 2
            }
            start: Object {
              column: 14
              index: 18
              line: 2
            }
          }
          label: Identifier {
            name: 'a'
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 15
                index: 19
                line: 2
              }
              start: Object {
                column: 14
                index: 18
                line: 2
              }
            }
          }
          body: ExpressionStatement {
            loc: Object {
              filename: 'input.js'
              end: Object {
                column: 18
                index: 22
                line: 2
              }
              start: Object {
                column: 17
                index: 21
                line: 2
              }
            }
            expression: NumericLiteral {
              value: 1
              loc: Object {
                filename: 'input.js'
                end: Object {
                  column: 18
                  index: 22
                  line: 2
                }
                start: Object {
                  column: 17
                  index: 21
                  line: 2
                }
              }
            }
          }
        }
      ]
    }
    EmptyStatement {
      loc: Object {
        filename: 'input.js'
        end: Object {
          column: 21
          index: 25
          line: 2
        }
        start: Object {
          column: 20
          index: 24
          line: 2
        }
      }
    }
  ]
}