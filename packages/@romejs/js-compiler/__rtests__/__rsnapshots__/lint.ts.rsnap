{
  "empty file": "Object {\n  diagnostics: Array []\n  src: ''\n  ast: Program {\n    body: Array []\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  }\n}",
  "undeclared variable": "Object {\n  src: 'foobar;'\n  diagnostics: Array [\n    Object {\n      category: 'lint/undeclaredVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Undeclared variable <emphasis>foobar</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 7\n        index: 7\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 7\n            index: 7\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        expression: ReferenceIdentifier {\n          name: 'foobar'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 6\n              index: 6\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n        }\n      }\n    ]\n  }\n}",
  "unsafe negation": "Object {\n  src: '!1 in [1,2]'\n  diagnostics: Array [\n    Object {\n      category: 'lint/unsafeNegation'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unsafe usage of negation operator in left side of binary expression'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 11\n        index: 11\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 11\n        index: 11\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 11\n            index: 11\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        expression: BinaryExpression {\n          operator: 'in'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 11\n              index: 11\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n          left: UnaryExpression {\n            operator: '!'\n            prefix: true\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 2\n                index: 2\n                line: 1\n              }\n              start: Object {\n                column: 0\n                index: 0\n                line: 1\n              }\n            }\n            argument: NumericLiteral {\n              value: 1\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 2\n                  index: 2\n                  line: 1\n                }\n                start: Object {\n                  column: 1\n                  index: 1\n                  line: 1\n                }\n              }\n            }\n          }\n          right: ArrayExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 11\n                index: 11\n                line: 1\n              }\n              start: Object {\n                column: 6\n                index: 6\n                line: 1\n              }\n            }\n            elements: Array [\n              NumericLiteral {\n                value: 1\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 8\n                    index: 8\n                    line: 1\n                  }\n                  start: Object {\n                    column: 7\n                    index: 7\n                    line: 1\n                  }\n                }\n              }\n              NumericLiteral {\n                value: 2\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 10\n                    index: 10\n                    line: 1\n                  }\n                  start: Object {\n                    column: 9\n                    index: 9\n                    line: 1\n                  }\n                }\n              }\n            ]\n          }\n        }\n      }\n    ]\n  }\n}",
  "disallow var": "Object {\n  src: 'var foobar;\\nfoobar'\n  diagnostics: Array [\n    Object {\n      category: 'lint/disallowVar'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Variable declarations using `var` are disallowed, use `let` or `const` instead.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 11\n        index: 11\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: true\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 6\n        index: 18\n        line: 2\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      VariableDeclarationStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 11\n            index: 11\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        declaration: VariableDeclaration {\n          kind: 'var'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 11\n              index: 11\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n          declarations: Array [\n            VariableDeclarator {\n              id: BindingIdentifier {\n                name: 'foobar'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 10\n                    index: 10\n                    line: 1\n                  }\n                  start: Object {\n                    column: 4\n                    index: 4\n                    line: 1\n                  }\n                }\n              }\n              init: undefined\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 10\n                  index: 10\n                  line: 1\n                }\n                start: Object {\n                  column: 4\n                  index: 4\n                  line: 1\n                }\n              }\n            }\n          ]\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 6\n            index: 18\n            line: 2\n          }\n          start: Object {\n            column: 0\n            index: 12\n            line: 2\n          }\n        }\n        expression: ReferenceIdentifier {\n          name: 'foobar'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 6\n              index: 18\n              line: 2\n            }\n            start: Object {\n              column: 0\n              index: 12\n              line: 2\n            }\n          }\n        }\n      }\n    ]\n  }\n}",
  "no async promise executor": "Object {\n  src: 'new Promise(async function foo() {})'\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 35\n        index: 35\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 36\n        index: 36\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 36\n            index: 36\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        expression: NewExpression {\n          optional: undefined\n          typeArguments: undefined\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 36\n              index: 36\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n          callee: ReferenceIdentifier {\n            name: 'Promise'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 11\n                index: 11\n                line: 1\n              }\n              start: Object {\n                column: 4\n                index: 4\n                line: 1\n              }\n            }\n          }\n          arguments: Array [\n            FunctionExpression {\n              id: BindingIdentifier {\n                name: 'foo'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 30\n                    index: 30\n                    line: 1\n                  }\n                  start: Object {\n                    column: 27\n                    index: 27\n                    line: 1\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 35\n                  index: 35\n                  line: 1\n                }\n                start: Object {\n                  column: 12\n                  index: 12\n                  line: 1\n                }\n              }\n              body: BlockStatement {\n                body: Array []\n                directives: Array []\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 35\n                    index: 35\n                    line: 1\n                  }\n                  start: Object {\n                    column: 33\n                    index: 33\n                    line: 1\n                  }\n                }\n              }\n              head: FunctionHead {\n                async: true\n                generator: false\n                hasHoistedVars: false\n                params: Array []\n                predicate: undefined\n                rest: undefined\n                returnType: undefined\n                thisType: undefined\n                typeParameters: undefined\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 33\n                    index: 33\n                    line: 1\n                  }\n                  start: Object {\n                    column: 12\n                    index: 12\n                    line: 1\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
  "no async promise executor: 1": "Object {\n  src: 'new Promise(async () => {})'\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 26\n        index: 26\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 27\n        index: 27\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 27\n            index: 27\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        expression: NewExpression {\n          optional: undefined\n          typeArguments: undefined\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 27\n              index: 27\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n          callee: ReferenceIdentifier {\n            name: 'Promise'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 11\n                index: 11\n                line: 1\n              }\n              start: Object {\n                column: 4\n                index: 4\n                line: 1\n              }\n            }\n          }\n          arguments: Array [\n            ArrowFunctionExpression {\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 26\n                  index: 26\n                  line: 1\n                }\n                start: Object {\n                  column: 12\n                  index: 12\n                  line: 1\n                }\n              }\n              body: BlockStatement {\n                body: Array []\n                directives: Array []\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 26\n                    index: 26\n                    line: 1\n                  }\n                  start: Object {\n                    column: 24\n                    index: 24\n                    line: 1\n                  }\n                }\n              }\n              head: FunctionHead {\n                async: true\n                hasHoistedVars: false\n                params: Array []\n                rest: undefined\n                returnType: undefined\n                thisType: undefined\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 24\n                    index: 24\n                    line: 1\n                  }\n                  start: Object {\n                    column: 12\n                    index: 12\n                    line: 1\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
  "no async promise executor: 2": "Object {\n  src: 'new Promise(((((async () => {})))))'\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 30\n        index: 30\n        line: 1\n      }\n      start: Object {\n        column: 16\n        index: 16\n        line: 1\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 35\n        index: 35\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 35\n            index: 35\n            line: 1\n          }\n          start: Object {\n            column: 0\n            index: 0\n            line: 1\n          }\n        }\n        expression: NewExpression {\n          optional: undefined\n          typeArguments: undefined\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 35\n              index: 35\n              line: 1\n            }\n            start: Object {\n              column: 0\n              index: 0\n              line: 1\n            }\n          }\n          callee: ReferenceIdentifier {\n            name: 'Promise'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 11\n                index: 11\n                line: 1\n              }\n              start: Object {\n                column: 4\n                index: 4\n                line: 1\n              }\n            }\n          }\n          arguments: Array [\n            ArrowFunctionExpression {\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 30\n                  index: 30\n                  line: 1\n                }\n                start: Object {\n                  column: 16\n                  index: 16\n                  line: 1\n                }\n              }\n              body: BlockStatement {\n                body: Array []\n                directives: Array []\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 30\n                    index: 30\n                    line: 1\n                  }\n                  start: Object {\n                    column: 28\n                    index: 28\n                    line: 1\n                  }\n                }\n              }\n              head: FunctionHead {\n                async: true\n                hasHoistedVars: false\n                params: Array []\n                rest: undefined\n                returnType: undefined\n                thisType: undefined\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 28\n                    index: 28\n                    line: 1\n                  }\n                  start: Object {\n                    column: 16\n                    index: 16\n                    line: 1\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    ]\n  }\n}",
  "getter return": "Object {\n  src: 'class p {\\n  get name() {\\n    console.log(\\'hello\\');\\n  }\\n}\\nconsole.log(new p());\\n'\n  diagnostics: Array [\n    Object {\n      category: 'lint/getterReturn'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Class get method does not have a return statement'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 5\n        index: 77\n        line: 6\n      }\n      start: Object {\n        column: 4\n        index: 5\n        line: 2\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 4\n        index: 107\n        line: 8\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      ClassDeclaration {\n        id: BindingIdentifier {\n          name: 'p'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 11\n              index: 12\n              line: 2\n            }\n            start: Object {\n              column: 10\n              index: 11\n              line: 2\n            }\n          }\n        }\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 5\n            index: 77\n            line: 6\n          }\n          start: Object {\n            column: 4\n            index: 5\n            line: 2\n          }\n        }\n        meta: ClassHead {\n          implements: undefined\n          superClass: undefined\n          superTypeParameters: undefined\n          typeParameters: undefined\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 5\n              index: 77\n              line: 6\n            }\n            start: Object {\n              column: 4\n              index: 5\n              line: 2\n            }\n          }\n          body: Array [\n            ClassMethod {\n              kind: 'get'\n              key: StaticPropertyKey {\n                value: Identifier {\n                  name: 'name'\n                  loc: Object {\n                    filename: 'unknown'\n                    end: Object {\n                      column: 14\n                      index: 29\n                      line: 3\n                    }\n                    start: Object {\n                      column: 10\n                      index: 25\n                      line: 3\n                    }\n                  }\n                }\n                variance: undefined\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 14\n                    index: 29\n                    line: 3\n                  }\n                  start: Object {\n                    column: 10\n                    index: 25\n                    line: 3\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 7\n                  index: 70\n                  line: 5\n                }\n                start: Object {\n                  column: 6\n                  index: 21\n                  line: 3\n                }\n              }\n              head: FunctionHead {\n                async: false\n                generator: false\n                hasHoistedVars: false\n                params: Array []\n                predicate: undefined\n                rest: undefined\n                returnType: undefined\n                thisType: undefined\n                typeParameters: undefined\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 17\n                    index: 32\n                    line: 3\n                  }\n                  start: Object {\n                    column: 17\n                    index: 32\n                    line: 3\n                  }\n                }\n              }\n              meta: ClassPropertyMeta {\n                abstract: false\n                accessibility: undefined\n                optional: false\n                readonly: false\n                static: false\n                typeAnnotation: undefined\n                start: Object {\n                  column: 6\n                  index: 21\n                  line: 3\n                }\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 14\n                    index: 29\n                    line: 3\n                  }\n                  start: Object {\n                    column: 6\n                    index: 21\n                    line: 3\n                  }\n                }\n              }\n              body: BlockStatement {\n                directives: Array []\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 7\n                    index: 70\n                    line: 5\n                  }\n                  start: Object {\n                    column: 17\n                    index: 32\n                    line: 3\n                  }\n                }\n                body: Array [\n                  ExpressionStatement {\n                    loc: Object {\n                      filename: 'unknown'\n                      end: Object {\n                        column: 28\n                        index: 62\n                        line: 4\n                      }\n                      start: Object {\n                        column: 8\n                        index: 42\n                        line: 4\n                      }\n                    }\n                    expression: CallExpression {\n                      loc: Object {\n                        filename: 'unknown'\n                        end: Object {\n                          column: 28\n                          index: 62\n                          line: 4\n                        }\n                        start: Object {\n                          column: 8\n                          index: 42\n                          line: 4\n                        }\n                      }\n                      arguments: Array [\n                        StringLiteral {\n                          value: 'hello'\n                          loc: Object {\n                            filename: 'unknown'\n                            end: Object {\n                              column: 27\n                              index: 61\n                              line: 4\n                            }\n                            start: Object {\n                              column: 20\n                              index: 54\n                              line: 4\n                            }\n                          }\n                        }\n                      ]\n                      callee: MemberExpression {\n                        loc: Object {\n                          filename: 'unknown'\n                          end: Object {\n                            column: 19\n                            index: 53\n                            line: 4\n                          }\n                          start: Object {\n                            column: 8\n                            index: 42\n                            line: 4\n                          }\n                        }\n                        object: ReferenceIdentifier {\n                          name: 'console'\n                          loc: Object {\n                            filename: 'unknown'\n                            end: Object {\n                              column: 15\n                              index: 49\n                              line: 4\n                            }\n                            start: Object {\n                              column: 8\n                              index: 42\n                              line: 4\n                            }\n                          }\n                        }\n                        property: StaticMemberProperty {\n                          value: Identifier {\n                            name: 'log'\n                            loc: Object {\n                              filename: 'unknown'\n                              end: Object {\n                                column: 19\n                                index: 53\n                                line: 4\n                              }\n                              start: Object {\n                                column: 16\n                                index: 50\n                                line: 4\n                              }\n                            }\n                          }\n                          loc: Object {\n                            filename: 'unknown'\n                            end: Object {\n                              column: 19\n                              index: 53\n                              line: 4\n                            }\n                            start: Object {\n                              column: 16\n                              index: 50\n                              line: 4\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                ]\n              }\n            }\n          ]\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 24\n            index: 102\n            line: 7\n          }\n          start: Object {\n            column: 4\n            index: 82\n            line: 7\n          }\n        }\n        expression: CallExpression {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 24\n              index: 102\n              line: 7\n            }\n            start: Object {\n              column: 4\n              index: 82\n              line: 7\n            }\n          }\n          arguments: Array [\n            NewExpression {\n              arguments: Array []\n              optional: undefined\n              typeArguments: undefined\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 23\n                  index: 101\n                  line: 7\n                }\n                start: Object {\n                  column: 16\n                  index: 94\n                  line: 7\n                }\n              }\n              callee: ReferenceIdentifier {\n                name: 'p'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 21\n                    index: 99\n                    line: 7\n                  }\n                  start: Object {\n                    column: 20\n                    index: 98\n                    line: 7\n                  }\n                }\n              }\n            }\n          ]\n          callee: MemberExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 15\n                index: 93\n                line: 7\n              }\n              start: Object {\n                column: 4\n                index: 82\n                line: 7\n              }\n            }\n            object: ReferenceIdentifier {\n              name: 'console'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 11\n                  index: 89\n                  line: 7\n                }\n                start: Object {\n                  column: 4\n                  index: 82\n                  line: 7\n                }\n              }\n            }\n            property: StaticMemberProperty {\n              value: Identifier {\n                name: 'log'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 15\n                    index: 93\n                    line: 7\n                  }\n                  start: Object {\n                    column: 12\n                    index: 90\n                    line: 7\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 15\n                  index: 93\n                  line: 7\n                }\n                start: Object {\n                  column: 12\n                  index: 90\n                  line: 7\n                }\n              }\n            }\n          }\n        }\n      }\n    ]\n  }\n}",
  "getter return: 1": "Object {\n  src: 'let p;\\np = {\\n  get name() {\\n    console.log(\\'hello\\');\\n  }};\\nconsole.log(p);\\n'\n  diagnostics: Array [\n    Object {\n      category: 'lint/getterReturn'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Class get method does not have a return statement'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 5\n        index: 83\n        line: 7\n      }\n      start: Object {\n        column: 8\n        index: 20\n        line: 3\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 4\n        index: 108\n        line: 9\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      VariableDeclarationStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 10\n            index: 11\n            line: 2\n          }\n          start: Object {\n            column: 4\n            index: 5\n            line: 2\n          }\n        }\n        declaration: VariableDeclaration {\n          kind: 'let'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 10\n              index: 11\n              line: 2\n            }\n            start: Object {\n              column: 4\n              index: 5\n              line: 2\n            }\n          }\n          declarations: Array [\n            VariableDeclarator {\n              id: BindingIdentifier {\n                name: 'p'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 9\n                    index: 10\n                    line: 2\n                  }\n                  start: Object {\n                    column: 8\n                    index: 9\n                    line: 2\n                  }\n                }\n              }\n              init: undefined\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 9\n                  index: 10\n                  line: 2\n                }\n                start: Object {\n                  column: 8\n                  index: 9\n                  line: 2\n                }\n              }\n            }\n          ]\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 6\n            index: 84\n            line: 7\n          }\n          start: Object {\n            column: 4\n            index: 16\n            line: 3\n          }\n        }\n        expression: AssignmentExpression {\n          operator: '='\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 5\n              index: 83\n              line: 7\n            }\n            start: Object {\n              column: 4\n              index: 16\n              line: 3\n            }\n          }\n          left: AssignmentIdentifier {\n            name: 'p'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 5\n                index: 17\n                line: 3\n              }\n              start: Object {\n                column: 4\n                index: 16\n                line: 3\n              }\n            }\n          }\n          right: ObjectExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 5\n                index: 83\n                line: 7\n              }\n              start: Object {\n                column: 8\n                index: 20\n                line: 3\n              }\n            }\n            properties: Array [\n              ObjectMethod {\n                kind: 'get'\n                key: StaticPropertyKey {\n                  value: Identifier {\n                    name: 'name'\n                    loc: Object {\n                      filename: 'unknown'\n                      end: Object {\n                        column: 14\n                        index: 36\n                        line: 4\n                      }\n                      start: Object {\n                        column: 10\n                        index: 32\n                        line: 4\n                      }\n                    }\n                  }\n                  variance: undefined\n                  loc: Object {\n                    filename: 'unknown'\n                    end: Object {\n                      column: 14\n                      index: 36\n                      line: 4\n                    }\n                    start: Object {\n                      column: 10\n                      index: 32\n                      line: 4\n                    }\n                  }\n                }\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 7\n                    index: 77\n                    line: 6\n                  }\n                  start: Object {\n                    column: 6\n                    index: 28\n                    line: 4\n                  }\n                }\n                head: FunctionHead {\n                  async: false\n                  generator: false\n                  hasHoistedVars: false\n                  params: Array []\n                  predicate: undefined\n                  rest: undefined\n                  returnType: undefined\n                  thisType: undefined\n                  typeParameters: undefined\n                  loc: Object {\n                    filename: 'unknown'\n                    end: Object {\n                      column: 17\n                      index: 39\n                      line: 4\n                    }\n                    start: Object {\n                      column: 17\n                      index: 39\n                      line: 4\n                    }\n                  }\n                }\n                body: BlockStatement {\n                  directives: Array []\n                  loc: Object {\n                    filename: 'unknown'\n                    end: Object {\n                      column: 7\n                      index: 77\n                      line: 6\n                    }\n                    start: Object {\n                      column: 17\n                      index: 39\n                      line: 4\n                    }\n                  }\n                  body: Array [\n                    ExpressionStatement {\n                      loc: Object {\n                        filename: 'unknown'\n                        end: Object {\n                          column: 28\n                          index: 69\n                          line: 5\n                        }\n                        start: Object {\n                          column: 8\n                          index: 49\n                          line: 5\n                        }\n                      }\n                      expression: CallExpression {\n                        loc: Object {\n                          filename: 'unknown'\n                          end: Object {\n                            column: 28\n                            index: 69\n                            line: 5\n                          }\n                          start: Object {\n                            column: 8\n                            index: 49\n                            line: 5\n                          }\n                        }\n                        arguments: Array [\n                          StringLiteral {\n                            value: 'hello'\n                            loc: Object {\n                              filename: 'unknown'\n                              end: Object {\n                                column: 27\n                                index: 68\n                                line: 5\n                              }\n                              start: Object {\n                                column: 20\n                                index: 61\n                                line: 5\n                              }\n                            }\n                          }\n                        ]\n                        callee: MemberExpression {\n                          loc: Object {\n                            filename: 'unknown'\n                            end: Object {\n                              column: 19\n                              index: 60\n                              line: 5\n                            }\n                            start: Object {\n                              column: 8\n                              index: 49\n                              line: 5\n                            }\n                          }\n                          object: ReferenceIdentifier {\n                            name: 'console'\n                            loc: Object {\n                              filename: 'unknown'\n                              end: Object {\n                                column: 15\n                                index: 56\n                                line: 5\n                              }\n                              start: Object {\n                                column: 8\n                                index: 49\n                                line: 5\n                              }\n                            }\n                          }\n                          property: StaticMemberProperty {\n                            value: Identifier {\n                              name: 'log'\n                              loc: Object {\n                                filename: 'unknown'\n                                end: Object {\n                                  column: 19\n                                  index: 60\n                                  line: 5\n                                }\n                                start: Object {\n                                  column: 16\n                                  index: 57\n                                  line: 5\n                                }\n                              }\n                            }\n                            loc: Object {\n                              filename: 'unknown'\n                              end: Object {\n                                column: 19\n                                index: 60\n                                line: 5\n                              }\n                              start: Object {\n                                column: 16\n                                index: 57\n                                line: 5\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            ]\n          }\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 18\n            index: 103\n            line: 8\n          }\n          start: Object {\n            column: 4\n            index: 89\n            line: 8\n          }\n        }\n        expression: CallExpression {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 18\n              index: 103\n              line: 8\n            }\n            start: Object {\n              column: 4\n              index: 89\n              line: 8\n            }\n          }\n          arguments: Array [\n            ReferenceIdentifier {\n              name: 'p'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 17\n                  index: 102\n                  line: 8\n                }\n                start: Object {\n                  column: 16\n                  index: 101\n                  line: 8\n                }\n              }\n            }\n          ]\n          callee: MemberExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 15\n                index: 100\n                line: 8\n              }\n              start: Object {\n                column: 4\n                index: 89\n                line: 8\n              }\n            }\n            object: ReferenceIdentifier {\n              name: 'console'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 11\n                  index: 96\n                  line: 8\n                }\n                start: Object {\n                  column: 4\n                  index: 89\n                  line: 8\n                }\n              }\n            }\n            property: StaticMemberProperty {\n              value: Identifier {\n                name: 'log'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 15\n                    index: 100\n                    line: 8\n                  }\n                  start: Object {\n                    column: 12\n                    index: 97\n                    line: 8\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 15\n                  index: 100\n                  line: 8\n                }\n                start: Object {\n                  column: 12\n                  index: 97\n                  line: 8\n                }\n              }\n            }\n          }\n        }\n      }\n    ]\n  }\n}",
  "getter return: 2": "Object {\n  src: 'let p = {};\\nObject.defineProperty(p, {\\n  get: function() {\\n    console.log(\\'hello\\');\\n  }});\\nconsole.log(p);\\n'\n  diagnostics: Array [\n    Object {\n      category: 'lint/getterReturn'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Class get method does not have a return statement'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 7\n        index: 110\n        line: 6\n      }\n      start: Object {\n        column: 6\n        index: 54\n        line: 4\n      }\n    }\n  ]\n  ast: Program {\n    comments: Array []\n    diagnostics: Array []\n    directives: Array []\n    filename: 'unknown'\n    hasHoistedVars: false\n    interpreter: undefined\n    mtime: undefined\n    sourceType: 'module'\n    syntax: Array []\n    loc: Object {\n      filename: 'unknown'\n      end: Object {\n        column: 4\n        index: 142\n        line: 9\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n    body: Array [\n      VariableDeclarationStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 15\n            index: 16\n            line: 2\n          }\n          start: Object {\n            column: 4\n            index: 5\n            line: 2\n          }\n        }\n        declaration: VariableDeclaration {\n          kind: 'let'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 15\n              index: 16\n              line: 2\n            }\n            start: Object {\n              column: 4\n              index: 5\n              line: 2\n            }\n          }\n          declarations: Array [\n            VariableDeclarator {\n              id: BindingIdentifier {\n                name: 'p'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 9\n                    index: 10\n                    line: 2\n                  }\n                  start: Object {\n                    column: 8\n                    index: 9\n                    line: 2\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 14\n                  index: 15\n                  line: 2\n                }\n                start: Object {\n                  column: 8\n                  index: 9\n                  line: 2\n                }\n              }\n              init: ObjectExpression {\n                properties: Array []\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 14\n                    index: 15\n                    line: 2\n                  }\n                  start: Object {\n                    column: 12\n                    index: 13\n                    line: 2\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 7\n            index: 118\n            line: 7\n          }\n          start: Object {\n            column: 4\n            index: 21\n            line: 3\n          }\n        }\n        expression: CallExpression {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 6\n              index: 117\n              line: 7\n            }\n            start: Object {\n              column: 4\n              index: 21\n              line: 3\n            }\n          }\n          callee: MemberExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 25\n                index: 42\n                line: 3\n              }\n              start: Object {\n                column: 4\n                index: 21\n                line: 3\n              }\n            }\n            object: ReferenceIdentifier {\n              name: 'Object'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 10\n                  index: 27\n                  line: 3\n                }\n                start: Object {\n                  column: 4\n                  index: 21\n                  line: 3\n                }\n              }\n            }\n            property: StaticMemberProperty {\n              value: Identifier {\n                name: 'defineProperty'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 25\n                    index: 42\n                    line: 3\n                  }\n                  start: Object {\n                    column: 11\n                    index: 28\n                    line: 3\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 25\n                  index: 42\n                  line: 3\n                }\n                start: Object {\n                  column: 11\n                  index: 28\n                  line: 3\n                }\n              }\n            }\n          }\n          arguments: Array [\n            ReferenceIdentifier {\n              name: 'p'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 27\n                  index: 44\n                  line: 3\n                }\n                start: Object {\n                  column: 26\n                  index: 43\n                  line: 3\n                }\n              }\n            }\n            ObjectExpression {\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 5\n                  index: 116\n                  line: 7\n                }\n                start: Object {\n                  column: 29\n                  index: 46\n                  line: 3\n                }\n              }\n              properties: Array [\n                ObjectProperty {\n                  key: StaticPropertyKey {\n                    value: Identifier {\n                      name: 'get'\n                      loc: Object {\n                        filename: 'unknown'\n                        end: Object {\n                          column: 9\n                          index: 57\n                          line: 4\n                        }\n                        start: Object {\n                          column: 6\n                          index: 54\n                          line: 4\n                        }\n                      }\n                    }\n                    variance: undefined\n                    loc: Object {\n                      filename: 'unknown'\n                      end: Object {\n                        column: 9\n                        index: 57\n                        line: 4\n                      }\n                      start: Object {\n                        column: 6\n                        index: 54\n                        line: 4\n                      }\n                    }\n                  }\n                  value: FunctionExpression {\n                    id: undefined\n                    loc: Object {\n                      filename: 'unknown'\n                      end: Object {\n                        column: 7\n                        index: 110\n                        line: 6\n                      }\n                      start: Object {\n                        column: 11\n                        index: 59\n                        line: 4\n                      }\n                    }\n                    head: FunctionHead {\n                      async: false\n                      generator: false\n                      hasHoistedVars: false\n                      params: Array []\n                      predicate: undefined\n                      rest: undefined\n                      returnType: undefined\n                      thisType: undefined\n                      typeParameters: undefined\n                      loc: Object {\n                        filename: 'unknown'\n                        end: Object {\n                          column: 22\n                          index: 70\n                          line: 4\n                        }\n                        start: Object {\n                          column: 11\n                          index: 59\n                          line: 4\n                        }\n                      }\n                    }\n                    body: BlockStatement {\n                      directives: Array []\n                      loc: Object {\n                        filename: 'unknown'\n                        end: Object {\n                          column: 7\n                          index: 110\n                          line: 6\n                        }\n                        start: Object {\n                          column: 22\n                          index: 70\n                          line: 4\n                        }\n                      }\n                      body: Array [\n                        ExpressionStatement {\n                          loc: Object {\n                            filename: 'unknown'\n                            end: Object {\n                              column: 30\n                              index: 102\n                              line: 5\n                            }\n                            start: Object {\n                              column: 10\n                              index: 82\n                              line: 5\n                            }\n                          }\n                          expression: CallExpression {\n                            loc: Object {\n                              filename: 'unknown'\n                              end: Object {\n                                column: 30\n                                index: 102\n                                line: 5\n                              }\n                              start: Object {\n                                column: 10\n                                index: 82\n                                line: 5\n                              }\n                            }\n                            arguments: Array [\n                              StringLiteral {\n                                value: 'hello'\n                                loc: Object {\n                                  filename: 'unknown'\n                                  end: Object {\n                                    column: 29\n                                    index: 101\n                                    line: 5\n                                  }\n                                  start: Object {\n                                    column: 22\n                                    index: 94\n                                    line: 5\n                                  }\n                                }\n                              }\n                            ]\n                            callee: MemberExpression {\n                              loc: Object {\n                                filename: 'unknown'\n                                end: Object {\n                                  column: 21\n                                  index: 93\n                                  line: 5\n                                }\n                                start: Object {\n                                  column: 10\n                                  index: 82\n                                  line: 5\n                                }\n                              }\n                              object: ReferenceIdentifier {\n                                name: 'console'\n                                loc: Object {\n                                  filename: 'unknown'\n                                  end: Object {\n                                    column: 17\n                                    index: 89\n                                    line: 5\n                                  }\n                                  start: Object {\n                                    column: 10\n                                    index: 82\n                                    line: 5\n                                  }\n                                }\n                              }\n                              property: StaticMemberProperty {\n                                value: Identifier {\n                                  name: 'log'\n                                  loc: Object {\n                                    filename: 'unknown'\n                                    end: Object {\n                                      column: 21\n                                      index: 93\n                                      line: 5\n                                    }\n                                    start: Object {\n                                      column: 18\n                                      index: 90\n                                      line: 5\n                                    }\n                                  }\n                                }\n                                loc: Object {\n                                  filename: 'unknown'\n                                  end: Object {\n                                    column: 21\n                                    index: 93\n                                    line: 5\n                                  }\n                                  start: Object {\n                                    column: 18\n                                    index: 90\n                                    line: 5\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      ]\n                    }\n                  }\n                  loc: Object {\n                    filename: 'unknown'\n                    end: Object {\n                      column: 7\n                      index: 110\n                      line: 6\n                    }\n                    start: Object {\n                      column: 6\n                      index: 54\n                      line: 4\n                    }\n                  }\n                }\n              ]\n            }\n          ]\n        }\n      }\n      ExpressionStatement {\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 18\n            index: 137\n            line: 8\n          }\n          start: Object {\n            column: 4\n            index: 123\n            line: 8\n          }\n        }\n        expression: CallExpression {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 18\n              index: 137\n              line: 8\n            }\n            start: Object {\n              column: 4\n              index: 123\n              line: 8\n            }\n          }\n          arguments: Array [\n            ReferenceIdentifier {\n              name: 'p'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 17\n                  index: 136\n                  line: 8\n                }\n                start: Object {\n                  column: 16\n                  index: 135\n                  line: 8\n                }\n              }\n            }\n          ]\n          callee: MemberExpression {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 15\n                index: 134\n                line: 8\n              }\n              start: Object {\n                column: 4\n                index: 123\n                line: 8\n              }\n            }\n            object: ReferenceIdentifier {\n              name: 'console'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 11\n                  index: 130\n                  line: 8\n                }\n                start: Object {\n                  column: 4\n                  index: 123\n                  line: 8\n                }\n              }\n            }\n            property: StaticMemberProperty {\n              value: Identifier {\n                name: 'log'\n                loc: Object {\n                  filename: 'unknown'\n                  end: Object {\n                    column: 15\n                    index: 134\n                    line: 8\n                  }\n                  start: Object {\n                    column: 12\n                    index: 131\n                    line: 8\n                  }\n                }\n              }\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 15\n                  index: 134\n                  line: 8\n                }\n                start: Object {\n                  column: 12\n                  index: 131\n                  line: 8\n                }\n              }\n            }\n          }\n        }\n      }\n    ]\n  }\n}"
}