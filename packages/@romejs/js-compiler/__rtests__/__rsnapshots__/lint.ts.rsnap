{
  "disallow var": "Object {\n  src: 'var foobar;\\nfoobar'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/disallowVar'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Variable declarations using `var` are disallowed, use `let` or `const` instead.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 11\n        index: 11\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "empty file": "Object {\n  diagnostics: Array []\n  src: ''\n  suppressions: Array []\n}",
  "getter return": "Object {\n  src: 'class p {\\n  get name() {\\n    console.log(\\'hello\\');\\n  }\\n}\\nconsole.log(new p());\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/getterReturn'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Expected a \\'return\\' at end of a getter method but got empty block'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 7\n        index: 70\n        line: 5\n      }\n      start: Object {\n        column: 17\n        index: 32\n        line: 3\n      }\n    }\n  ]\n}",
  "getter return: 1": "Object {\n  src: 'let p;\\np = {\\n  get name() {\\n    console.log(\\'hello\\');\\n  }};\\nconsole.log(p);\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/getterReturn'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Expected a \\'return\\' at end of a getter method but got empty block'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 7\n        index: 77\n        line: 6\n      }\n      start: Object {\n        column: 17\n        index: 39\n        line: 4\n      }\n    }\n  ]\n}",
  "getter return: 2": "Object {\n  diagnostics: Array []\n  src: 'let p = {};\\nObject.defineProperty(p, {\\n  get: function() {\\n    console.log(\\'hello\\');\\n  }});\\nconsole.log(p);\\n'\n  suppressions: Array []\n}",
  "no async promise executor": "Object {\n  src: 'new Promise(async function foo() {})'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 35\n        index: 35\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n  ]\n}",
  "no async promise executor: 1": "Object {\n  src: 'new Promise(async () => {})'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 26\n        index: 26\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n  ]\n}",
  "no async promise executor: 2": "Object {\n  src: 'new Promise(((((async () => {})))))'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noAsyncPromiseExecutor'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Promise executor functions should not be async.'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 30\n        index: 30\n        line: 1\n      }\n      start: Object {\n        column: 16\n        index: 16\n        line: 1\n      }\n    }\n  ]\n}",
  "no cond assign": "Object {\n  src: 'for (let i = 1; i = 10; i++) {\\n      console.log(\\'foo\\')\\n    }'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noCondAssign'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Cannot assign variable in loop condition'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 5\n        index: 61\n        line: 3\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "no cond assign: 1": "Object {\n  src: 'if(foo = \\'bar\\') {\\n      console.log(\\'foo\\')\\n    }'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noCondAssign'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Cannot assign variable in loop condition'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 5\n        index: 48\n        line: 3\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "no cond assign: 2": "Object {\n  src: 'while (foo = \\'bar\\' {\\n      console.log(\\'foo\\')\\n    }'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'parse/js'\n      filename: 'unknown'\n      message: 'Unclosed while test'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'js-parser'}]\n      end: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n      advice: Array [\n        log {\n          category: 'info'\n          message: 'We expected to find the closing character <emphasis>)</emphasis> here'\n        }\n        frame {\n          filename: 'unknown'\n          end: Object {\n            column: 19\n            index: 19\n            line: 1\n          }\n          start: Object {\n            column: 19\n            index: 19\n            line: 1\n          }\n        }\n      ]\n    }\n    Object {\n      category: 'lint/noCondAssign'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Cannot assign variable in loop condition'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 5\n        index: 51\n        line: 3\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "no cond assign: 3": "Object {\n  src: 'do {\\n      console.log(\\'foo)\\n    } while (foo = \\'bar\\')'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      advice: undefined\n      category: 'parse/js'\n      filename: 'unknown'\n      message: 'Unterminated string constant'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'js-parser'}]\n      end: Object {\n        column: 0\n        index: 28\n        line: 3\n      }\n      start: Object {\n        column: 0\n        index: 28\n        line: 3\n      }\n    }\n    Object {\n      category: 'lint/undeclaredVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Undeclared variable <emphasis>INVALID_PLACEHOLDER</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 50\n        index: 55\n        line: 2\n      }\n      start: Object {\n        column: 50\n        index: 55\n        line: 2\n      }\n    }\n    Object {\n      category: 'lint/undeclaredVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Undeclared variable <emphasis>bar</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 47\n        index: 52\n        line: 2\n      }\n      start: Object {\n        column: 44\n        index: 49\n        line: 2\n      }\n    }\n  ]\n}",
  "no debugger": "Array [\n  Object {\n    category: 'lint/noDebugger'\n    filename: 'unknown'\n    fixable: true\n    language: 'js'\n    message: 'Unexpected \\'debugger\\' statement'\n    mtime: undefined\n    sourceType: 'module'\n    origins: Array [Object {category: 'lint'}]\n    end: Object {\n      column: 9\n      index: 9\n      line: 1\n    }\n    start: Object {\n      column: 0\n      index: 0\n      line: 1\n    }\n  }\n]",
  "no empty character class in regular expression": "Object {\n  src: 'let foo = /^abc[]/;foo;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 18\n        index: 18\n        line: 1\n      }\n      start: Object {\n        column: 10\n        index: 10\n        line: 1\n      }\n    }\n  ]\n}",
  "no empty character class in regular expression: 1": "Object {\n  src: 'let foo = /foo[]bar/;foo;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 20\n        index: 20\n        line: 1\n      }\n      start: Object {\n        column: 10\n        index: 10\n        line: 1\n      }\n    }\n  ]\n}",
  "no empty character class in regular expression: 2": "Object {\n  src: 'let foo = \"\";if (foo.match(/^abc[]/)) { foo; }'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 35\n        index: 35\n        line: 1\n      }\n      start: Object {\n        column: 27\n        index: 27\n        line: 1\n      }\n    }\n  ]\n}",
  "no empty character class in regular expression: 3": "Object {\n  src: 'let foo = /[]]/;foo;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 15\n        index: 15\n        line: 1\n      }\n      start: Object {\n        column: 10\n        index: 10\n        line: 1\n      }\n    }\n  ]\n}",
  "no empty character class in regular expression: 4": "Object {\n  src: 'let foo = /\\\\[[]/;foo;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 16\n        index: 16\n        line: 1\n      }\n      start: Object {\n        column: 10\n        index: 10\n        line: 1\n      }\n    }\n  ]\n}",
  "no empty character class in regular expression: 5": "Object {\n  src: 'let foo = /\\\\[\\\\[\\\\]a-z[]/;foo;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/noEmptyCharacterClass'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Empty character classes in regular expressions are not allowed'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 23\n        index: 23\n        line: 1\n      }\n      start: Object {\n        column: 10\n        index: 10\n        line: 1\n      }\n    }\n  ]\n}",
  "prefer function declarations": "Object {\n  src: 'function foo() {}\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/preferFunctionDeclarations'\n      filename: 'unknown'\n      fixable: true\n      language: 'js'\n      message: 'Use a function declaration instead of a const function'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 26\n        index: 26\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused variable <emphasis>foo</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n    }\n  ]\n}",
  "prefer function declarations: 1": "Object {\n  src: 'function foo() {}\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/preferFunctionDeclarations'\n      filename: 'unknown'\n      fixable: true\n      language: 'js'\n      message: 'Use a function declaration instead of a const function'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 20\n        index: 20\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused variable <emphasis>foo</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n    }\n  ]\n}",
  "prefer function declarations: 2": "Object {\n  src: 'const foo = () => {\\n  this;\\n};\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused variable <emphasis>foo</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n    }\n  ]\n}",
  "prefer function declarations: 3": "Object {\n  src: 'function foo() {\\n  function bar() {\\n    this;\\n  }\\n}\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused function <emphasis>bar</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 31\n        index: 31\n        line: 1\n      }\n      start: Object {\n        column: 28\n        index: 28\n        line: 1\n      }\n    }\n    Object {\n      category: 'lint/preferFunctionDeclarations'\n      filename: 'unknown'\n      fixable: true\n      language: 'js'\n      message: 'Use a function declaration instead of a const function'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 42\n        index: 42\n        line: 1\n      }\n      start: Object {\n        column: 12\n        index: 12\n        line: 1\n      }\n    }\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused variable <emphasis>foo</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n    }\n  ]\n}",
  "prefer function declarations: 4": "Object {\n  src: 'const foo any = function() {};\\n'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'parse/js'\n      filename: 'unknown'\n      message: 'A type annotation is only valid inside of a TypeScript or Flow file'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'js-parser'}]\n      end: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      start: Object {\n        column: 9\n        index: 9\n        line: 1\n      }\n      advice: Array [\n        log {\n          category: 'info'\n          message: 'Did you mean <emphasis>TypeScript</emphasis>? Change the file extension to <emphasis>.ts</emphasis> or <emphasis>.tsx</emphasis>'\n        }\n        log {\n          category: 'info'\n          message: 'Did you mean <emphasis>Flow</emphasis>? Add a <emphasis>@flow</emphasis> comment annotation to the top of the file'\n        }\n      ]\n    }\n    Object {\n      category: 'lint/unusedVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unused variable <emphasis>foo</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 14\n        index: 14\n        line: 1\n      }\n      start: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n    }\n  ]\n}",
  "sparse array": "Object {\n  src: '[1,,2]'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/sparseArray'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Your array contains an empty slot'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "undeclared variable": "Object {\n  src: 'foobar;'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/undeclaredVariables'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Undeclared variable <emphasis>foobar</emphasis>'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 6\n        index: 6\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}",
  "unsafe negation": "Object {\n  src: '!1 in [1,2]'\n  suppressions: Array []\n  diagnostics: Array [\n    Object {\n      category: 'lint/unsafeNegation'\n      filename: 'unknown'\n      language: 'js'\n      message: 'Unsafe usage of negation operator in left side of binary expression'\n      mtime: undefined\n      sourceType: 'module'\n      origins: Array [Object {category: 'lint'}]\n      end: Object {\n        column: 11\n        index: 11\n        line: 1\n      }\n      start: Object {\n        column: 0\n        index: 0\n        line: 1\n      }\n    }\n  ]\n}"
}