{
  "invalid": "Array [\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      body: Array []\n      directives: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 17\n          index: 17\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n    }\n  }\n]",
  "invalid: 1": "Array [\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      body: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 25\n          index: 25\n          line: 1\n        }\n        start: Object {\n          column: 14\n          index: 14\n          line: 1\n        }\n      }\n      directives: Array [\n        Directive {\n          value: 'foobar'\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 24\n              index: 24\n              line: 1\n            }\n            start: Object {\n              column: 15\n              index: 15\n              line: 1\n            }\n          }\n        }\n      ]\n    }\n  }\n]",
  "invalid: 2": "Array [\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      directives: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 35\n          index: 35\n          line: 1\n        }\n        start: Object {\n          column: 24\n          index: 24\n          line: 1\n        }\n      }\n      body: Array [\n        ExpressionStatement {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 34\n              index: 34\n              line: 1\n            }\n            start: Object {\n              column: 25\n              index: 25\n              line: 1\n            }\n          }\n          expression: StringLiteral {\n            value: 'foobar'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 33\n                index: 33\n                line: 1\n              }\n              start: Object {\n                column: 25\n                index: 25\n                line: 1\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n  INVALID {\n    description: 'empty alternate'\n    node: IfStatement {\n      alternate: undefined\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 35\n          index: 35\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n      test: ReferenceIdentifier {\n        name: 'bar'\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 22\n            index: 22\n            line: 1\n          }\n          start: Object {\n            column: 19\n            index: 19\n            line: 1\n          }\n        }\n      }\n      consequent: BlockStatement {\n        directives: Array []\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 35\n            index: 35\n            line: 1\n          }\n          start: Object {\n            column: 24\n            index: 24\n            line: 1\n          }\n        }\n        body: Array [\n          ExpressionStatement {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 34\n                index: 34\n                line: 1\n              }\n              start: Object {\n                column: 25\n                index: 25\n                line: 1\n              }\n            }\n            expression: StringLiteral {\n              value: 'foobar'\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 33\n                  index: 33\n                  line: 1\n                }\n                start: Object {\n                  column: 25\n                  index: 25\n                  line: 1\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n]",
  "invalid: 3": "Array [\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      directives: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 35\n          index: 35\n          line: 1\n        }\n        start: Object {\n          column: 24\n          index: 24\n          line: 1\n        }\n      }\n      body: Array [\n        ExpressionStatement {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 34\n              index: 34\n              line: 1\n            }\n            start: Object {\n              column: 25\n              index: 25\n              line: 1\n            }\n          }\n          expression: StringLiteral {\n            value: 'foobar'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 33\n                index: 33\n                line: 1\n              }\n              start: Object {\n                column: 25\n                index: 25\n                line: 1\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      body: Array []\n      directives: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 43\n          index: 43\n          line: 1\n        }\n        start: Object {\n          column: 41\n          index: 41\n          line: 1\n        }\n      }\n    }\n  }\n]",
  "invalid: 4": "Array [\n  INVALID {\n    description: 'switch with no default clause'\n    node: SwitchStatement {\n      cases: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 30\n          index: 30\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n      discriminant: ReferenceIdentifier {\n        name: 'foo'\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 26\n            index: 26\n            line: 1\n          }\n          start: Object {\n            column: 23\n            index: 23\n            line: 1\n          }\n        }\n      }\n    }\n  }\n]",
  "invalid: 5": "Array [\n  INVALID {\n    description: 'switch with no default clause'\n    node: SwitchStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 44\n          index: 44\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n      discriminant: ReferenceIdentifier {\n        name: 'foo'\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 26\n            index: 26\n            line: 1\n          }\n          start: Object {\n            column: 23\n            index: 23\n            line: 1\n          }\n        }\n      }\n      cases: Array [\n        SwitchCase {\n          loc: Object {\n            filename: 'unknown'\n            end: Object {\n              column: 43\n              index: 43\n              line: 1\n            }\n            start: Object {\n              column: 39\n              index: 39\n              line: 1\n            }\n          }\n          test: StringLiteral {\n            value: 'bar'\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 39\n                index: 39\n                line: 1\n              }\n              start: Object {\n                column: 34\n                index: 34\n                line: 1\n              }\n            }\n          }\n          consequent: Array [\n            BlockStatement {\n              body: Array []\n              directives: Array []\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 43\n                  index: 43\n                  line: 1\n                }\n                start: Object {\n                  column: 41\n                  index: 41\n                  line: 1\n                }\n              }\n            }\n          ]\n        }\n      ]\n    }\n  }\n]",
  "invalid: 6": "Array [\n  INVALID {\n    description: 'empty block'\n    node: BlockStatement {\n      body: Array []\n      directives: Array []\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 40\n          index: 40\n          line: 1\n        }\n        start: Object {\n          column: 38\n          index: 38\n          line: 1\n        }\n      }\n    }\n  }\n]",
  "completions": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 28\n          index: 28\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 27\n            index: 27\n            line: 1\n          }\n          start: Object {\n            column: 22\n            index: 22\n            line: 1\n          }\n        }\n      }\n    }\n  }\n]",
  "completions: 1": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      argument: undefined\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 22\n          index: 22\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n    }\n  }\n]",
  "completions: 2": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 38\n          index: 38\n          line: 1\n        }\n        start: Object {\n          column: 25\n          index: 25\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 37\n            index: 37\n            line: 1\n          }\n          start: Object {\n            column: 32\n            index: 32\n            line: 1\n          }\n        }\n      }\n    }\n  }\n  INVALID {\n    description: 'empty alternate'\n    node: IfStatement {\n      alternate: undefined\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 39\n          index: 39\n          line: 1\n        }\n        start: Object {\n          column: 15\n          index: 15\n          line: 1\n        }\n      }\n      test: ReferenceIdentifier {\n        name: 'bar'\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 22\n            index: 22\n            line: 1\n          }\n          start: Object {\n            column: 19\n            index: 19\n            line: 1\n          }\n        }\n      }\n      consequent: BlockStatement {\n        directives: Array []\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 39\n            index: 39\n            line: 1\n          }\n          start: Object {\n            column: 24\n            index: 24\n            line: 1\n          }\n        }\n        body: Array [\n          ReturnStatement {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 38\n                index: 38\n                line: 1\n              }\n              start: Object {\n                column: 25\n                index: 25\n                line: 1\n              }\n            }\n            argument: BooleanLiteral {\n              value: false\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 37\n                  index: 37\n                  line: 1\n                }\n                start: Object {\n                  column: 32\n                  index: 32\n                  line: 1\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n]",
  "completions: 3": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 38\n          index: 38\n          line: 1\n        }\n        start: Object {\n          column: 25\n          index: 25\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 37\n            index: 37\n            line: 1\n          }\n          start: Object {\n            column: 32\n            index: 32\n            line: 1\n          }\n        }\n      }\n    }\n  }\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 58\n          index: 58\n          line: 1\n        }\n        start: Object {\n          column: 46\n          index: 46\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: true\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 57\n            index: 57\n            line: 1\n          }\n          start: Object {\n            column: 53\n            index: 53\n            line: 1\n          }\n        }\n      }\n    }\n  }\n]",
  "completions: 4": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 52\n          index: 52\n          line: 1\n        }\n        start: Object {\n          column: 39\n          index: 39\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 51\n            index: 51\n            line: 1\n          }\n          start: Object {\n            column: 46\n            index: 46\n            line: 1\n          }\n        }\n      }\n    }\n  }\n]",
  "completions: 5": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 52\n          index: 52\n          line: 1\n        }\n        start: Object {\n          column: 39\n          index: 39\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 51\n            index: 51\n            line: 1\n          }\n          start: Object {\n            column: 46\n            index: 46\n            line: 1\n          }\n        }\n      }\n    }\n  }\n]",
  "mix": "Array [\n  COMPLETION {\n    node: ReturnStatement {\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 63\n          index: 63\n          line: 1\n        }\n        start: Object {\n          column: 50\n          index: 50\n          line: 1\n        }\n      }\n      argument: BooleanLiteral {\n        value: false\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 62\n            index: 62\n            line: 1\n          }\n          start: Object {\n            column: 57\n            index: 57\n            line: 1\n          }\n        }\n      }\n    }\n  }\n  INVALID {\n    description: 'empty alternate'\n    node: IfStatement {\n      alternate: undefined\n      loc: Object {\n        filename: 'unknown'\n        end: Object {\n          column: 64\n          index: 64\n          line: 1\n        }\n        start: Object {\n          column: 39\n          index: 39\n          line: 1\n        }\n      }\n      test: BooleanLiteral {\n        value: true\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 47\n            index: 47\n            line: 1\n          }\n          start: Object {\n            column: 43\n            index: 43\n            line: 1\n          }\n        }\n      }\n      consequent: BlockStatement {\n        directives: Array []\n        loc: Object {\n          filename: 'unknown'\n          end: Object {\n            column: 64\n            index: 64\n            line: 1\n          }\n          start: Object {\n            column: 49\n            index: 49\n            line: 1\n          }\n        }\n        body: Array [\n          ReturnStatement {\n            loc: Object {\n              filename: 'unknown'\n              end: Object {\n                column: 63\n                index: 63\n                line: 1\n              }\n              start: Object {\n                column: 50\n                index: 50\n                line: 1\n              }\n            }\n            argument: BooleanLiteral {\n              value: false\n              loc: Object {\n                filename: 'unknown'\n                end: Object {\n                  column: 62\n                  index: 62\n                  line: 1\n                }\n                start: Object {\n                  column: 57\n                  index: 57\n                  line: 1\n                }\n              }\n            }\n          }\n        ]\n      }\n    }\n  }\n]"
}